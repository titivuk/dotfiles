{
  "files.autoSave": "afterDelay",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[dockercompose]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },
  "typescript.updateImportsOnFileMove.enabled": "prompt",
  "javascript.updateImportsOnFileMove.enabled": "prompt",
  "editor.inlineSuggest.enabled": true,
  "redhat.telemetry.enabled": false,
  "go.toolsManagement.autoUpdate": true,
  "editor.minimap.enabled": false,
  "editor.lineNumbers": "relative",
  "window.zoomLevel": 0,
  "workbench.colorCustomizations": {
    // side bar list/tree
    "list.activeSelectionBackground": "#3B4252",
    "list.inactiveSelectionBackground": "#2E3440",
    "list.hoverBackground": "#2E3440",
    "foreground": "#BBC3D4",
    "descriptionForeground": "#BBC3D4",
    "editor.background": "#242933",
    "editor.selectionBackground": "#3B4252",
    "editor.lineHighlightBorder": "#00000000",
    // highlight error in editor
    "editorError.foreground": "#C5727A",
    // link to declaration
    "editorLink.activeForeground": "#5E81AC",
    // vertical lines showing add, modify, delete changes
    // located near line number
    "editorGutter.modifiedBackground": "#5E81AC",
    "editorGutter.addedBackground": "#A3BE8C",
    "editorGutter.deletedBackground": "#BF616A",
    // git colors for file names, etc
    "gitDecoration.modifiedResourceForeground": "#EBCB8B",
    "gitDecoration.deletedResourceForeground": "#BF616A",
    "gitDecoration.untrackedResourceForeground": "#A3BE8C",
    "widget.border": "#00000000",
    "editorWidget.background": "#191D24",
    "editorWidget.foreground": "#BBC3D4",
    "editorWidget.resizeBorder": "#00000000",
    "editorLineNumber.foreground": "#4C566A",
    "editorLineNumber.activeForeground": "#BBC3D4",
    "selection.background": "#3B4252",
    "focusBorder": "#00000000",
    "sideBar.background": "#242933",
    "sideBar.foreground": "#BBC3D4",
    "sideBar.border": "#191D24",
    "sideBarTitle.foreground": "#EBCB8B",
    "sideBarSectionHeader.background": "#191D24",
    "sideBarSectionHeader.foreground": "#BBC3D4",
    "sideBarSectionHeader.border": "#00000000",
    "editorGroup.border": "#00000000",
    "editorGroupHeader.tabsBackground": "#191D24",
    "editorGroupHeader.tabsBorder": "#00000000",
    "tab.activeBackground": "#242933",
    "tab.inactiveBackground": "#1E222A",
    "tab.activeBorderTop": "#191D24",
    "tab.activeBorder": "#00000000",
    "tab.activeForeground": "#BBC3D4",
    "tab.inactiveForeground": "#BBC3D4",
    "tab.hoverBackground": "#1E222A",
    "statusBar.background": "#191D24",
    "statusBarItem.remoteBackground": "#191D24",
    "statusBarItem.remoteForeground": "#BBC3D4",
    "statusBar.foreground": "#BBC3D4",
    "activityBar.background": "#191D24",
    "activityBar.foreground": "#BBC3D4",
    "activityBar.border": "#00000000",
    "activityBar.inactiveForeground": "#4C566A",
    "activityBar.activeBorder": "#00000000",
    "activityBarTop.background": "#191D24",
    "activityBarTop.foreground": "#BBC3D4",
    "activityBarTop.border": "#00000000",
    "activityBarTop.inactiveForeground": "#4C566A",
    "activityBarTop.activeBorder": "#00000000",
    "scrollbar.shadow": "#191D24",
    "scrollbarSlider.background": "#1E222A",
    "scrollbarSlider.hoverBackground": "#191D24",
    "menu.background": "#FFFF00",
    "panel.background": "#242933",
    "panel.border": "#191D24",
    "panelTitle.activeForeground": "#BBC3D4",
    "panelTitle.inactiveForeground": "#BBC3D4",
    "panelTitle.activeBorder": "#D08770",
    "panelInput.border": "#191D24",
    "titleBar.activeBackground": "#191D24",
    "input.background": "#242933",
    "input.border": "#191D24",
    "input.foreground": "#BBC3D4",
    "input.placeholderForeground": "#BBC3D49F",
    "inputValidation.infoBackground": "#191D24",
    "inputValidation.infoForeground": "#88C0D0",
    "inputValidation.infoBorder": "#88C0D0",
    "inputValidation.errorBackground": "#191D24",
    "inputValidation.errorForeground": "#C5727A",
    "inputValidation.errorBorder": "#C5727A",
    "inputValidation.warningBackground": "#191D24",
    "inputValidation.warningForeground": "#EFD49F",
    "inputValidation.warningBorder": "#EFD49F",
    // buttons like open repository when new window is created
    "button.background": "#1E222A",
    "button.foreground": "#BBC3D4",
    "button.hoverBackground": "#191D24",
    // options like "Match case" and "Match whole word"
    "inputOption.activeBackground": "#3B4252",
    "inputOption.activeBorder": "#00000000",
    // autocomplete widget, may be something else
    "editorSuggestWidget.selectedBackground": "#3B4252",
    "editorSuggestWidget.highlightForeground": "#88C0D0",
    "editorSuggestWidget.focusHighlightForeground": "#88C0D0",
    // "inlineChat.background": "#ff0000"
    // editor window that shows references etc
    "peekView.border": "#00000000",
    "peekViewTitle.background": "#1E222A",
    "peekViewTitleDescription.foreground": "#81A1C1",
    "peekViewTitleLabel.foreground": "#BBC3D4",
    "peekViewEditor.background": "#1E222A",
    "peekViewEditor.matchHighlightBackground": "#3B4252",
    "peekViewEditorGutter.background": "#1E222A",
    // mini tree on the right side
    "peekViewResult.selectionForeground": "#BBC3D4",
    "peekViewResult.background": "#1E222A",
    "peekViewResult.matchHighlightBackground": "#3B4252",
    "peekViewResult.fileForeground": "#81A1C1",
    "peekViewResult.lineForeground": "#BBC3D4",
    // button in the middle top (yes its button)
    // CTRL-P triggers window from that button
    "commandCenter.background": "#191D24",
    "commandCenter.foreground": "#00000000",
    "commandCenter.border": "#00000000",
    "commandCenter.activeBackground": "#191D24",
    "commandCenter.activeForeground": "#00000000",
    "commandCenter.activeBorder": "#00000000",
    "commandCenter.debuggingBackground": "#00000000",
    // menu triggered my CTRL-P
    "pickerGroup.border": "#00000000",
    "pickerGroup.foreground": "#BBC3D4",
    "quickInput.background": "#1E222A",
    "quickInput.foreground": "#BBC3D4",
    "quickInputList.focusForeground": "#BBC3D4",
    "quickInputList.focusBackground": "#3B4252",
    "quickInputList.focusIconForeground": "#BBC3D4",
  },
  "editor.tokenColorCustomizations": {
    // https://code.visualstudio.com/api/language-extensions/semantic-highlight-guide#theming
    "textMateRules": [
      {
        "scope": "comment",
        "settings": {
          "foreground": "#747c8b",
          "fontStyle": "italic"
        }
      },
      {
        "scope": [
          // type, struct, func
          "keyword",
          // type, interface, class, etc
          "storage.type",
          // public, private, readonly, async, etc
          "storage.modifier"
        ],
        "settings": {
          "foreground": "#D08770",
        }
      },
      {
        "scope": "string",
        "settings": {
          "foreground": "#A3BE8C"
        }
      },
      {
        "scope": [
          // fields, params, variable names, etc
          "variable",
          // includes
          //  - entity.name.function.member
          "entity.name.function",
        ],
        "settings": {
          "foreground": "#8FBCBB"
        }
      },
      {
        // variables
        "scope": [
          "variable.other.readwrite",
          "variable.parameter",
          "support.variable",
          "keyword.operator"
        ],
        "settings": {
          "foreground": "#BBC3D4"
        }
      },
      {
        "scope": [
          // const/readonly variables
          "variable.other.constant",
          // numeric literals
          "constant.numeric"
        ],
        "settings": {
          "foreground": "#BE9DB8"
        }
      },
      {
        "scope": [
          // includes
          //  - entity.name.type.class
          //  - entity.name.type.interface
          //  - entity.name.type.enum
          "entity.name.type",
          // includes builtin classes like Promise
          "support.class",
          "support.type",
        ],
        "settings": {
          "foreground": "#EBCB8B",
        }
      }
    ]
  },
  "workbench.activityBar.location": "top",
  // VIM configuration
  "vim.leader": "<Space>",
  "vim.hlsearch": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    // navigation
    // switch b/w buffers
    {
      "before": [
        "<S-h>"
      ],
      "commands": [
        ":bprevious"
      ]
    },
    {
      "before": [
        "<S-l>"
      ],
      "commands": [
        ":bnext"
      ]
    },
    // splits
    {
      "before": [
        "leader",
        "v"
      ],
      "commands": [
        ":vsplit"
      ]
    },
    {
      "before": [
        "leader",
        "s"
      ],
      "commands": [
        ":split"
      ]
    },
    // navigate between splits
    {
      "before": [
        "leader",
        "h"
      ],
      "commands": [
        "workbench.action.focusLeftGroup"
      ]
    },
    {
      "before": [
        "leader",
        "j"
      ],
      "commands": [
        "workbench.action.focusBelowGroup"
      ]
    },
    {
      "before": [
        "leader",
        "k"
      ],
      "commands": [
        "workbench.action.focusAboveGroup"
      ]
    },
    {
      "before": [
        "leader",
        "l"
      ],
      "commands": [
        "workbench.action.focusRightGroup"
      ]
    },
    {
      "before": [
        "leader",
        "w"
      ],
      "commands": [
        ":w!"
      ]
    },
    {
      "before": [
        "leader",
        "q"
      ],
      "commands": [
        ":q!"
      ]
    },
    {
      "before": [
        "leader",
        "x"
      ],
      "commands": [
        ":x!"
      ]
    }
  ],
  "vim.visualModeKeyBindings": [
    // Stay in visual mode while indenting
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    // Move selected lines while staying in visual mode
    {
      "before": [
        "J"
      ],
      "commands": [
        "editor.action.moveLinesDownAction"
      ]
    },
    {
      "before": [
        "K"
      ],
      "commands": [
        "editor.action.moveLinesUpAction"
      ]
    },
    // toggle comment selection
    {
      "before": [
        "leader",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    }
  ]
}